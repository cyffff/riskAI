{"ast":null,"code":"var _jsxFileName = \"/Users/cyf/CursorProjects/riskAI/frontend/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Paper, TextField, IconButton, Typography, List, ListItem, ListItemText, CircularProgress, Divider } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport PersonIcon from '@mui/icons-material/Person';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const messageEndRef = useRef(null);\n  useEffect(() => {\n    // Generate a random session ID on component mount\n    const newSessionId = `user-${Math.random().toString(36).substring(2, 10)}`;\n    setSessionId(newSessionId);\n\n    // Add initial bot greeting\n    setMessages([{\n      text: \"Hello! I'm your Credit Risk AI Assistant. How can I help you today?\",\n      sender: 'bot',\n      timestamp: new Date().toISOString()\n    }]);\n  }, []);\n  useEffect(() => {\n    var _messageEndRef$curren;\n    // Scroll to the bottom when messages change\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/chat/message`, {\n        message: input,\n        sender_id: sessionId\n      });\n\n      // Handle the bot responses\n      const botResponses = response.data.responses || [];\n      if (botResponses.length === 0) {\n        // Add default response if none returned\n        setMessages(prev => [...prev, {\n          text: \"I'm not sure how to respond to that. Could you try phrasing your question differently?\",\n          sender: 'bot',\n          timestamp: new Date().toISOString()\n        }]);\n      } else {\n        // Add each bot response as a separate message\n        botResponses.forEach(resp => {\n          setMessages(prev => [...prev, {\n            text: resp.text,\n            sender: 'bot',\n            timestamp: new Date().toISOString(),\n            buttons: resp.buttons,\n            image: resp.image\n          }]);\n        });\n      }\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Sorry, I encountered an error. Please try again or check your connection.');\n      setMessages(prev => [...prev, {\n        text: 'Sorry, I encountered an error. Please try again or check your connection.',\n        sender: 'bot',\n        timestamp: new Date().toISOString(),\n        isError: true\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  const handleButtonClick = buttonText => {\n    setInput(buttonText);\n    setTimeout(() => {\n      sendMessage();\n    }, 100);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        backgroundColor: '#1976d2',\n        color: 'white',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {\n        sx: {\n          mr: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Credit Risk Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        flex: 1,\n        overflow: 'auto',\n        p: 2,\n        backgroundColor: '#f5f5f5'\n      },\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        sx: {\n          display: 'flex',\n          justifyContent: message.sender === 'user' ? 'flex-end' : 'flex-start',\n          mb: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 1,\n          sx: {\n            p: 2,\n            maxWidth: '70%',\n            backgroundColor: message.sender === 'user' ? '#e3f2fd' : 'white',\n            borderRadius: 2,\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'flex-start',\n              mb: 1\n            },\n            children: [message.sender === 'user' ? /*#__PURE__*/_jsxDEV(PersonIcon, {\n              fontSize: \"small\",\n              sx: {\n                mr: 1,\n                color: '#1976d2'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {\n              fontSize: \"small\",\n              sx: {\n                mr: 1,\n                color: '#1976d2'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                color: message.isError ? 'error.main' : 'text.primary',\n                whiteSpace: 'pre-line'\n              },\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), message.image && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.image,\n              alt: \"Bot message attachment\",\n              style: {\n                maxWidth: '100%',\n                borderRadius: 4\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this), message.buttons && message.buttons.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1,\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 1\n            },\n            children: message.buttons.map((button, buttonIndex) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 1,\n                borderRadius: 1,\n                backgroundColor: '#e0e0e0',\n                cursor: 'pointer',\n                '&:hover': {\n                  backgroundColor: '#d0d0d0'\n                }\n              },\n              onClick: () => handleButtonClick(button.payload || button.title),\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: button.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 23\n              }, this)\n            }, buttonIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              position: 'absolute',\n              right: 8,\n              bottom: 4,\n              color: 'text.secondary'\n            },\n            children: new Date(message.timestamp).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(ListItem, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-start',\n          mb: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 1,\n          sx: {\n            p: 2,\n            backgroundColor: 'white',\n            borderRadius: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20,\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Assistant is typing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        backgroundColor: 'white',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        placeholder: \"Type your message...\",\n        variant: \"outlined\",\n        size: \"small\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        disabled: loading,\n        sx: {\n          mr: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: sendMessage,\n        disabled: loading || !input.trim(),\n        \"aria-label\": \"send message\",\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"5dOOKjORNvemFyvWq2vWYCw1RvM=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Paper","TextField","IconButton","Typography","List","ListItem","ListItemText","CircularProgress","Divider","SendIcon","ChatBubbleOutlineIcon","PersonIcon","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","ChatInterface","_s","messages","setMessages","input","setInput","loading","setLoading","error","setError","sessionId","setSessionId","messageEndRef","newSessionId","Math","random","toString","substring","text","sender","timestamp","Date","toISOString","_messageEndRef$curren","current","scrollIntoView","behavior","sendMessage","trim","userMessage","prev","response","post","message","sender_id","botResponses","data","responses","length","forEach","resp","buttons","image","err","console","isError","handleKeyPress","event","key","handleButtonClick","buttonText","setTimeout","elevation","sx","height","display","flexDirection","overflow","children","p","backgroundColor","color","alignItems","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","flex","map","index","justifyContent","mb","maxWidth","borderRadius","position","fontSize","whiteSpace","mt","src","alt","style","flexWrap","gap","button","buttonIndex","cursor","onClick","payload","title","right","bottom","toLocaleTimeString","hour","minute","size","ref","fullWidth","placeholder","value","onChange","e","target","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["/Users/cyf/CursorProjects/riskAI/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  IconButton,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  CircularProgress,\n  Divider,\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport PersonIcon from '@mui/icons-material/Person';\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\nconst ChatInterface = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const messageEndRef = useRef(null);\n\n  useEffect(() => {\n    // Generate a random session ID on component mount\n    const newSessionId = `user-${Math.random().toString(36).substring(2, 10)}`;\n    setSessionId(newSessionId);\n\n    // Add initial bot greeting\n    setMessages([\n      {\n        text: \"Hello! I'm your Credit Risk AI Assistant. How can I help you today?\",\n        sender: 'bot',\n        timestamp: new Date().toISOString(),\n      },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    // Scroll to the bottom when messages change\n    messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      timestamp: new Date().toISOString(),\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    setInput('');\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios.post(`${API_URL}/chat/message`, {\n        message: input,\n        sender_id: sessionId,\n      });\n\n      // Handle the bot responses\n      const botResponses = response.data.responses || [];\n      \n      if (botResponses.length === 0) {\n        // Add default response if none returned\n        setMessages((prev) => [\n          ...prev,\n          {\n            text: \"I'm not sure how to respond to that. Could you try phrasing your question differently?\",\n            sender: 'bot',\n            timestamp: new Date().toISOString(),\n          },\n        ]);\n      } else {\n        // Add each bot response as a separate message\n        botResponses.forEach((resp) => {\n          setMessages((prev) => [\n            ...prev,\n            {\n              text: resp.text,\n              sender: 'bot',\n              timestamp: new Date().toISOString(),\n              buttons: resp.buttons,\n              image: resp.image,\n            },\n          ]);\n        });\n      }\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError(\n        'Sorry, I encountered an error. Please try again or check your connection.'\n      );\n      setMessages((prev) => [\n        ...prev,\n        {\n          text: 'Sorry, I encountered an error. Please try again or check your connection.',\n          sender: 'bot',\n          timestamp: new Date().toISOString(),\n          isError: true,\n        },\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  const handleButtonClick = (buttonText) => {\n    setInput(buttonText);\n    setTimeout(() => {\n      sendMessage();\n    }, 100);\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n      }}\n    >\n      <Box\n        sx={{\n          p: 2,\n          backgroundColor: '#1976d2',\n          color: 'white',\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <ChatBubbleOutlineIcon sx={{ mr: 1 }} />\n        <Typography variant=\"h6\">Credit Risk Assistant</Typography>\n      </Box>\n      <Divider />\n      <List\n        sx={{\n          flex: 1,\n          overflow: 'auto',\n          p: 2,\n          backgroundColor: '#f5f5f5',\n        }}\n      >\n        {messages.map((message, index) => (\n          <ListItem\n            key={index}\n            sx={{\n              display: 'flex',\n              justifyContent: message.sender === 'user' ? 'flex-end' : 'flex-start',\n              mb: 1,\n            }}\n          >\n            <Paper\n              elevation={1}\n              sx={{\n                p: 2,\n                maxWidth: '70%',\n                backgroundColor: message.sender === 'user' ? '#e3f2fd' : 'white',\n                borderRadius: 2,\n                position: 'relative',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'flex-start',\n                  mb: 1,\n                }}\n              >\n                {message.sender === 'user' ? (\n                  <PersonIcon fontSize=\"small\" sx={{ mr: 1, color: '#1976d2' }} />\n                ) : (\n                  <ChatBubbleOutlineIcon fontSize=\"small\" sx={{ mr: 1, color: '#1976d2' }} />\n                )}\n                <Typography\n                  variant=\"body1\"\n                  sx={{\n                    color: message.isError ? 'error.main' : 'text.primary',\n                    whiteSpace: 'pre-line',\n                  }}\n                >\n                  {message.text}\n                </Typography>\n              </Box>\n\n              {message.image && (\n                <Box sx={{ mt: 1 }}>\n                  <img\n                    src={message.image}\n                    alt=\"Bot message attachment\"\n                    style={{ maxWidth: '100%', borderRadius: 4 }}\n                  />\n                </Box>\n              )}\n\n              {message.buttons && message.buttons.length > 0 && (\n                <Box sx={{ mt: 1, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                  {message.buttons.map((button, buttonIndex) => (\n                    <Box\n                      key={buttonIndex}\n                      sx={{\n                        p: 1,\n                        borderRadius: 1,\n                        backgroundColor: '#e0e0e0',\n                        cursor: 'pointer',\n                        '&:hover': {\n                          backgroundColor: '#d0d0d0',\n                        },\n                      }}\n                      onClick={() => handleButtonClick(button.payload || button.title)}\n                    >\n                      <Typography variant=\"body2\">{button.title}</Typography>\n                    </Box>\n                  ))}\n                </Box>\n              )}\n\n              <Typography\n                variant=\"caption\"\n                sx={{ position: 'absolute', right: 8, bottom: 4, color: 'text.secondary' }}\n              >\n                {new Date(message.timestamp).toLocaleTimeString([], {\n                  hour: '2-digit',\n                  minute: '2-digit',\n                })}\n              </Typography>\n            </Paper>\n          </ListItem>\n        ))}\n        {loading && (\n          <ListItem\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-start',\n              mb: 1,\n            }}\n          >\n            <Paper\n              elevation={1}\n              sx={{\n                p: 2,\n                backgroundColor: 'white',\n                borderRadius: 2,\n              }}\n            >\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <CircularProgress size={20} sx={{ mr: 1 }} />\n                <Typography variant=\"body2\">Assistant is typing...</Typography>\n              </Box>\n            </Paper>\n          </ListItem>\n        )}\n        <div ref={messageEndRef} />\n      </List>\n      <Divider />\n      <Box\n        sx={{\n          p: 2,\n          backgroundColor: 'white',\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <TextField\n          fullWidth\n          placeholder=\"Type your message...\"\n          variant=\"outlined\"\n          size=\"small\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          disabled={loading}\n          sx={{ mr: 1 }}\n        />\n        <IconButton\n          color=\"primary\"\n          onClick={sendMessage}\n          disabled={loading || !input.trim()}\n          aria-label=\"send message\"\n        >\n          <SendIcon />\n        </IconButton>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}