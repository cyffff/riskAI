{"ast":null,"code":"var _jsxFileName = \"/Users/cyf/CursorProjects/riskAI/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Typography, Box, CircularProgress, Alert } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { BarChart, Bar } from 'recharts';\nimport { MockDataAlert } from '../components/MockDataAlert';\n\n// Mock data for when API calls fail\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MOCK_DASHBOARD_DATA = {\n  metrics: {\n    auc: 0.82,\n    approval_rate: 68.5,\n    recent_adjustments: 12,\n    new_features: 5,\n    feature_importance: [{\n      name: \"Credit Score\",\n      importance: 0.85\n    }, {\n      name: \"Income to Debt Ratio\",\n      importance: 0.76\n    }, {\n      name: \"Previous Defaults\",\n      importance: 0.68\n    }, {\n      name: \"Employment Duration\",\n      importance: 0.57\n    }, {\n      name: \"Address Stability\",\n      importance: 0.42\n    }]\n  },\n  riskTrends: [{\n    date: \"2023-01\",\n    average_risk_score: 0.42,\n    default_rate: 0.08\n  }, {\n    date: \"2023-02\",\n    average_risk_score: 0.44,\n    default_rate: 0.09\n  }, {\n    date: \"2023-03\",\n    average_risk_score: 0.41,\n    default_rate: 0.08\n  }, {\n    date: \"2023-04\",\n    average_risk_score: 0.39,\n    default_rate: 0.07\n  }, {\n    date: \"2023-05\",\n    average_risk_score: 0.38,\n    default_rate: 0.07\n  }, {\n    date: \"2023-06\",\n    average_risk_score: 0.40,\n    default_rate: 0.08\n  }],\n  userSegments: [{\n    segment: \"Low Risk\",\n    count: 1245\n  }, {\n    segment: \"Medium Risk\",\n    count: 845\n  }, {\n    segment: \"High Risk\",\n    count: 432\n  }, {\n    segment: \"Very High Risk\",\n    count: 178\n  }]\n};\nconst Dashboard = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [metrics, setMetrics] = useState(null);\n  const [riskTrends, setRiskTrends] = useState([]);\n  const [userSegments, setUserSegments] = useState([]);\n  const [usingMockData, setUsingMockData] = useState(false);\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  // Safely fetch data with JSON parsing error handling\n  const safeFetch = async (url, mockData) => {\n    try {\n      const response = await fetch(url);\n\n      // Check if response is ok (status 200-299)\n      if (!response.ok) {\n        throw new Error(`Server returned ${response.status} ${response.statusText}`);\n      }\n\n      // Check content type to ensure it's JSON\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        console.warn(`Expected JSON but got ${contentType}. Using mock data.`);\n        setUsingMockData(true);\n        return mockData;\n      }\n\n      // Try to parse the JSON\n      try {\n        const data = await response.json();\n        return data;\n      } catch (jsonError) {\n        console.error('Error parsing JSON:', jsonError);\n        setUsingMockData(true);\n        return mockData;\n      }\n    } catch (fetchError) {\n      console.error('Error fetching data:', fetchError);\n      setUsingMockData(true);\n      return mockData;\n    }\n  };\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Check if we should use mock data directly (for development)\n      const useMockData = process.env.REACT_APP_USE_MOCK_DATA === 'true' || true;\n      if (useMockData) {\n        setUsingMockData(true);\n        setMetrics(MOCK_DASHBOARD_DATA.metrics);\n        setRiskTrends(MOCK_DASHBOARD_DATA.riskTrends);\n        setUserSegments(MOCK_DASHBOARD_DATA.userSegments);\n        return;\n      }\n\n      // Use Promise.allSettled for more resilient fetching\n      const results = await Promise.allSettled([safeFetch('/api/model/metrics', MOCK_DASHBOARD_DATA.metrics), safeFetch('/api/risk-analysis/trends', MOCK_DASHBOARD_DATA.riskTrends), safeFetch('/api/risk-analysis/segments', MOCK_DASHBOARD_DATA.userSegments)]);\n\n      // Process metrics\n      if (results[0].status === 'fulfilled') {\n        setMetrics(results[0].value);\n      } else {\n        console.error('Failed to fetch metrics:', results[0].reason);\n        setMetrics(MOCK_DASHBOARD_DATA.metrics);\n        setUsingMockData(true);\n      }\n\n      // Process risk trends\n      if (results[1].status === 'fulfilled') {\n        setRiskTrends(results[1].value);\n      } else {\n        console.error('Failed to fetch risk trends:', results[1].reason);\n        setRiskTrends(MOCK_DASHBOARD_DATA.riskTrends);\n        setUsingMockData(true);\n      }\n\n      // Process user segments\n      if (results[2].status === 'fulfilled') {\n        setUserSegments(results[2].value);\n      } else {\n        console.error('Failed to fetch user segments:', results[2].reason);\n        setUserSegments(MOCK_DASHBOARD_DATA.userSegments);\n        setUsingMockData(true);\n      }\n    } catch (err) {\n      setError(err.message || 'An unexpected error occurred');\n      console.error('Error in fetchDashboardData:', err);\n\n      // Fall back to mock data on error\n      setMetrics(MOCK_DASHBOARD_DATA.metrics);\n      setRiskTrends(MOCK_DASHBOARD_DATA.riskTrends);\n      setUserSegments(MOCK_DASHBOARD_DATA.userSegments);\n      setUsingMockData(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), usingMockData && /*#__PURE__*/_jsxDEV(MockDataAlert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            height: 240\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            variant: \"h6\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: \"Model Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), metrics && /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              children: metrics.auc.toFixed(3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"AUC Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              sx: {\n                mt: 2\n              },\n              children: [metrics.approval_rate.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"Approval Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            height: 240\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            variant: \"h6\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: \"Risk Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), userSegments.length > 0 && /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 180,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: userSegments,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"segment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"count\",\n                fill: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            height: 240\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            variant: \"h6\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: \"Recent Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), metrics && /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              children: metrics.recent_adjustments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"Model Adjustments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              sx: {\n                mt: 2\n              },\n              children: metrics.new_features\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"New Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            height: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            variant: \"h6\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: \"Risk Score Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), riskTrends.length > 0 && /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: riskTrends,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"average_risk_score\",\n                stroke: \"#8884d8\",\n                name: \"Average Risk Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"default_rate\",\n                stroke: \"#82ca9d\",\n                name: \"Default Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            height: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            variant: \"h6\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: \"Feature Importance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), metrics && metrics.feature_importance && /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: metrics.feature_importance,\n              layout: \"vertical\",\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                type: \"category\",\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"importance\",\n                fill: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"9XdupT5tuKrh3nom8sWJpYmMk8U=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Paper","Typography","Box","CircularProgress","Alert","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","BarChart","Bar","MockDataAlert","jsxDEV","_jsxDEV","MOCK_DASHBOARD_DATA","metrics","auc","approval_rate","recent_adjustments","new_features","feature_importance","name","importance","riskTrends","date","average_risk_score","default_rate","userSegments","segment","count","Dashboard","_s","loading","setLoading","error","setError","setMetrics","setRiskTrends","setUserSegments","usingMockData","setUsingMockData","fetchDashboardData","safeFetch","url","mockData","response","fetch","ok","Error","status","statusText","contentType","headers","get","includes","console","warn","data","json","jsonError","fetchError","useMockData","process","env","REACT_APP_USE_MOCK_DATA","results","Promise","allSettled","value","reason","err","message","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","severity","sx","mt","mb","container","spacing","item","xs","md","p","flexDirection","height","color","toFixed","length","width","strokeDasharray","dataKey","fill","type","stroke","layout","_c","$RefreshReg$"],"sources":["/Users/cyf/CursorProjects/riskAI/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  CircularProgress,\n  Alert\n} from '@mui/material';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport {\n  BarChart,\n  Bar,\n} from 'recharts';\nimport { MockDataAlert } from '../components/MockDataAlert';\n\n// Mock data for when API calls fail\nconst MOCK_DASHBOARD_DATA = {\n  metrics: {\n    auc: 0.82,\n    approval_rate: 68.5,\n    recent_adjustments: 12,\n    new_features: 5,\n    feature_importance: [\n      { name: \"Credit Score\", importance: 0.85 },\n      { name: \"Income to Debt Ratio\", importance: 0.76 },\n      { name: \"Previous Defaults\", importance: 0.68 },\n      { name: \"Employment Duration\", importance: 0.57 },\n      { name: \"Address Stability\", importance: 0.42 }\n    ]\n  },\n  riskTrends: [\n    { date: \"2023-01\", average_risk_score: 0.42, default_rate: 0.08 },\n    { date: \"2023-02\", average_risk_score: 0.44, default_rate: 0.09 },\n    { date: \"2023-03\", average_risk_score: 0.41, default_rate: 0.08 },\n    { date: \"2023-04\", average_risk_score: 0.39, default_rate: 0.07 },\n    { date: \"2023-05\", average_risk_score: 0.38, default_rate: 0.07 },\n    { date: \"2023-06\", average_risk_score: 0.40, default_rate: 0.08 }\n  ],\n  userSegments: [\n    { segment: \"Low Risk\", count: 1245 },\n    { segment: \"Medium Risk\", count: 845 },\n    { segment: \"High Risk\", count: 432 },\n    { segment: \"Very High Risk\", count: 178 }\n  ]\n};\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [metrics, setMetrics] = useState(null);\n  const [riskTrends, setRiskTrends] = useState([]);\n  const [userSegments, setUserSegments] = useState([]);\n  const [usingMockData, setUsingMockData] = useState(false);\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  // Safely fetch data with JSON parsing error handling\n  const safeFetch = async (url, mockData) => {\n    try {\n      const response = await fetch(url);\n      \n      // Check if response is ok (status 200-299)\n      if (!response.ok) {\n        throw new Error(`Server returned ${response.status} ${response.statusText}`);\n      }\n      \n      // Check content type to ensure it's JSON\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        console.warn(`Expected JSON but got ${contentType}. Using mock data.`);\n        setUsingMockData(true);\n        return mockData;\n      }\n      \n      // Try to parse the JSON\n      try {\n        const data = await response.json();\n        return data;\n      } catch (jsonError) {\n        console.error('Error parsing JSON:', jsonError);\n        setUsingMockData(true);\n        return mockData;\n      }\n    } catch (fetchError) {\n      console.error('Error fetching data:', fetchError);\n      setUsingMockData(true);\n      return mockData;\n    }\n  };\n\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Check if we should use mock data directly (for development)\n      const useMockData = process.env.REACT_APP_USE_MOCK_DATA === 'true' || true;\n      \n      if (useMockData) {\n        setUsingMockData(true);\n        setMetrics(MOCK_DASHBOARD_DATA.metrics);\n        setRiskTrends(MOCK_DASHBOARD_DATA.riskTrends);\n        setUserSegments(MOCK_DASHBOARD_DATA.userSegments);\n        return;\n      }\n\n      // Use Promise.allSettled for more resilient fetching\n      const results = await Promise.allSettled([\n        safeFetch('/api/model/metrics', MOCK_DASHBOARD_DATA.metrics),\n        safeFetch('/api/risk-analysis/trends', MOCK_DASHBOARD_DATA.riskTrends),\n        safeFetch('/api/risk-analysis/segments', MOCK_DASHBOARD_DATA.userSegments)\n      ]);\n\n      // Process metrics\n      if (results[0].status === 'fulfilled') {\n        setMetrics(results[0].value);\n      } else {\n        console.error('Failed to fetch metrics:', results[0].reason);\n        setMetrics(MOCK_DASHBOARD_DATA.metrics);\n        setUsingMockData(true);\n      }\n\n      // Process risk trends\n      if (results[1].status === 'fulfilled') {\n        setRiskTrends(results[1].value);\n      } else {\n        console.error('Failed to fetch risk trends:', results[1].reason);\n        setRiskTrends(MOCK_DASHBOARD_DATA.riskTrends);\n        setUsingMockData(true);\n      }\n\n      // Process user segments\n      if (results[2].status === 'fulfilled') {\n        setUserSegments(results[2].value);\n      } else {\n        console.error('Failed to fetch user segments:', results[2].reason);\n        setUserSegments(MOCK_DASHBOARD_DATA.userSegments);\n        setUsingMockData(true);\n      }\n\n    } catch (err) {\n      setError(err.message || 'An unexpected error occurred');\n      console.error('Error in fetchDashboardData:', err);\n      \n      // Fall back to mock data on error\n      setMetrics(MOCK_DASHBOARD_DATA.metrics);\n      setRiskTrends(MOCK_DASHBOARD_DATA.riskTrends);\n      setUserSegments(MOCK_DASHBOARD_DATA.userSegments);\n      setUsingMockData(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Dashboard\n      </Typography>\n      \n      {usingMockData && <MockDataAlert />}\n      \n      {error && (\n        <Alert severity=\"error\" sx={{ mt: 2, mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      <Grid container spacing={3}>\n        {/* Key Metrics */}\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column', height: 240 }}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n              Model Performance\n            </Typography>\n            {metrics && (\n              <Box>\n                <Typography variant=\"h4\" gutterBottom>\n                  {metrics.auc.toFixed(3)}\n                </Typography>\n                <Typography color=\"text.secondary\">AUC Score</Typography>\n                <Typography variant=\"h4\" gutterBottom sx={{ mt: 2 }}>\n                  {metrics.approval_rate.toFixed(2)}%\n                </Typography>\n                <Typography color=\"text.secondary\">Approval Rate</Typography>\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column', height: 240 }}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n              Risk Distribution\n            </Typography>\n            {userSegments.length > 0 && (\n              <ResponsiveContainer width=\"100%\" height={180}>\n                <BarChart data={userSegments}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"segment\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                </BarChart>\n              </ResponsiveContainer>\n            )}\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column', height: 240 }}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n              Recent Activity\n            </Typography>\n            {metrics && (\n              <Box>\n                <Typography variant=\"h4\" gutterBottom>\n                  {metrics.recent_adjustments}\n                </Typography>\n                <Typography color=\"text.secondary\">Model Adjustments</Typography>\n                <Typography variant=\"h4\" gutterBottom sx={{ mt: 2 }}>\n                  {metrics.new_features}\n                </Typography>\n                <Typography color=\"text.secondary\">New Features</Typography>\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Risk Trends Chart */}\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column', height: 400 }}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n              Risk Score Trends\n            </Typography>\n            {riskTrends.length > 0 && (\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart data={riskTrends}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"average_risk_score\"\n                    stroke=\"#8884d8\"\n                    name=\"Average Risk Score\"\n                  />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"default_rate\"\n                    stroke=\"#82ca9d\"\n                    name=\"Default Rate\"\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Feature Performance */}\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column', height: 400 }}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n              Feature Importance\n            </Typography>\n            {metrics && metrics.feature_importance && (\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart\n                  data={metrics.feature_importance}\n                  layout=\"vertical\"\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis type=\"number\" />\n                  <YAxis type=\"category\" dataKey=\"name\" />\n                  <Tooltip />\n                  <Bar dataKey=\"importance\" fill=\"#8884d8\" />\n                </BarChart>\n              </ResponsiveContainer>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}