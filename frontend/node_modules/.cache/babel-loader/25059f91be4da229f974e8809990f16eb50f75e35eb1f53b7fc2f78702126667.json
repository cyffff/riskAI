{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { featureApi } from '../services/api';\nexport function useFeatureManagement() {\n  _s();\n  const [features, setFeatures] = useState([]);\n  const [sqlSets, setSqlSets] = useState([]);\n  const [sqlStatements, setSqlStatements] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const [featuresData, sqlSetsData, sqlStatementsData] = await Promise.all([featureApi.getFeatures(), featureApi.getSqlSets(), featureApi.getSqlStatements()]);\n      setFeatures(featuresData);\n      setSqlSets(sqlSetsData);\n      setSqlStatements(sqlStatementsData);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch data');\n      console.error('Error fetching data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const refreshData = () => {\n    fetchData();\n  };\n  return {\n    features,\n    sqlSets,\n    sqlStatements,\n    loading,\n    error,\n    refreshData\n  };\n}\n_s(useFeatureManagement, \"NPQixlOQIujNgXdPMAcqjKaEUxU=\");","map":{"version":3,"names":["useState","useEffect","featureApi","useFeatureManagement","_s","features","setFeatures","sqlSets","setSqlSets","sqlStatements","setSqlStatements","loading","setLoading","error","setError","fetchData","featuresData","sqlSetsData","sqlStatementsData","Promise","all","getFeatures","getSqlSets","getSqlStatements","err","message","console","refreshData"],"sources":["/Users/cyf/CursorProjects/riskAI/frontend/src/hooks/useFeatureManagement.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { featureApi } from '../services/api';\n\nexport function useFeatureManagement() {\n  const [features, setFeatures] = useState([]);\n  const [sqlSets, setSqlSets] = useState([]);\n  const [sqlStatements, setSqlStatements] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const [featuresData, sqlSetsData, sqlStatementsData] = await Promise.all([\n        featureApi.getFeatures(),\n        featureApi.getSqlSets(),\n        featureApi.getSqlStatements()\n      ]);\n\n      setFeatures(featuresData);\n      setSqlSets(sqlSetsData);\n      setSqlStatements(sqlStatementsData);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch data');\n      console.error('Error fetching data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const refreshData = () => {\n    fetchData();\n  };\n\n  return {\n    features,\n    sqlSets,\n    sqlStatements,\n    loading,\n    error,\n    refreshData\n  };\n} "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,OAAO,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM,CAACE,YAAY,EAAEC,WAAW,EAAEC,iBAAiB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACvElB,UAAU,CAACmB,WAAW,CAAC,CAAC,EACxBnB,UAAU,CAACoB,UAAU,CAAC,CAAC,EACvBpB,UAAU,CAACqB,gBAAgB,CAAC,CAAC,CAC9B,CAAC;MAEFjB,WAAW,CAACU,YAAY,CAAC;MACzBR,UAAU,CAACS,WAAW,CAAC;MACvBP,gBAAgB,CAACQ,iBAAiB,CAAC;IACrC,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZV,QAAQ,CAACU,GAAG,CAACC,OAAO,IAAI,sBAAsB,CAAC;MAC/CC,OAAO,CAACb,KAAK,CAAC,sBAAsB,EAAEW,GAAG,CAAC;IAC5C,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxBZ,SAAS,CAAC,CAAC;EACb,CAAC;EAED,OAAO;IACLV,QAAQ;IACRE,OAAO;IACPE,aAAa;IACbE,OAAO;IACPE,KAAK;IACLc;EACF,CAAC;AACH;AAACvB,EAAA,CA7CeD,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}